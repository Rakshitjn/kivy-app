
from kivymd.app import MDApp
from kivymd.uix.button import MDRectangleFlatIconButton,MDRectangleFlatButton, MDIconButton
from kivy.core.window import Window
from kivy.lang import Builder
from kivymd.uix.dialog import MDDialog
import random
from kivy.uix.screenmanager import ScreenManager, Screen
from kivymd.uix.list import OneLineIconListItem, IconLeftWidget
import os
Window.size = (300, 500)
#This is made by NEOS company
screen_helper = """
<MenuScreen>:
    name : 'menu'       
    MDTextField:
        id: username
        hint_text: "Digit in password"
        pos_hint:{'center_x': 0.5, 'center_y': 0.80}
        size_hint_x: 0.83
        size_hint_y:None
        height:120   
             
    MDTextField:
        id: acc_name
        hint_text: "Account Name"
        pos_hint:{'center_x': 0.5, 'center_y': 0.70}
        size_hint_x: 0.83
        size_hint_y:None
        height:120    
        
    MDRaisedButton:
        text: "Generate"
        font_size: 20
        pos_hint:{'center_x': 0.5, 'center_y': 0.55}
        size_hint:(0.83, 0.15)
        on_press: root.show_data()
    
    MDTextField:
        id: account
        hint_text: "Account Name"
        pos_hint:{'center_x': 0.5, 'center_y': 0.40}
        size_hint_x: 0.83
        size_hint_y:None
        height:120

    MDTextField:
        id: passw
        hint_text: "Password"
        pos_hint:{'center_x': 0.5, 'center_y': 0.30}
        size_hint_x: 0.83
        size_hint_y:None
        height:120
            
    MDRectangleFlatButton:
        text: "Create"
        font_size: 20
        pos_hint:{'center_x': 0.5, 'center_y': 0.15}
        size_hint:(0.83, 0.15)
        on_press: root.decode_data()
            
    BoxLayout:
        orientation: 'vertical'
        MDToolbar:
            title: 'Password Manager'
            right_action_items: [["key-variant", lambda x: root.show_pass()]]
            left_action_items: [["menu", lambda x: nav_drawer.toggle_nav_drawer()]]
            elevation:10
        Widget:


    MDNavigationDrawer:
        id: nav_drawer
    



        
        
<StackScreen>:    
    name : 'stack'
    MDTextField:
        id: login_pass
        hint_text: "Enter the Password"
        helper_text_mode: "on_focus"
        icon_right_color: app.theme_cls.primary_color
        pos_hint:{'center_x': 0.5, 'center_y': 0.63}
        size_hint_x: 0.83
        size_hint_y:None
        height:120
    
    MDTextField:
        id: login_user
        hint_text: "Enter the username"
        helper_text_mode: "on_focus"
        icon_right_color: app.theme_cls.primary_color
        pos_hint:{'center_x': 0.5, 'center_y': 0.73}
        size_hint_x: 0.83
        size_hint_y:None
        height:120
        
    MDFillRoundFlatButton:
        text: "Login"
        font_size: 30
        pos_hint:{'center_x': 0.5, 'center_y': 0.25}
        size_hint:(0.83, 0.35)
        on_press: root.login_cred()
        
    BoxLayout:
        orientation: 'vertical'
        MDToolbar:
            title: 'Password Manager'
            elevation:10
        Widget:
        
        
<PassScreen>:
    name : 'pass_scr'
    MDCard:
        BoxLayout:
            orientation: 'vertical'
            MDToolbar:
                title: 'Password Manager'
                left_action_items: [["arrow-left", lambda x: root.back_to_menuscr()]]         
                elevation:10
            ScrollView:
                MDList:
                    id: container





        







    

Screen:        
    NavigationLayout:
        ScreenManager:
            StackScreen:
            MenuScreen:
            PassScreen:
                            
                    
"""
password = ""

class MenuScreen(Screen):
    def on_enter(self):
        try:
            open("1q.txt","x")

        except Exception as e:
            pass
                

        try:
            open("2q.txt","x")

        except Exception as e:
            pass    

        try:
            open("3q.txt","x")
            
        except Exception as e:
            pass

        try:
            open("4q.txt","x")
            
        except Exception as e:
            pass


        try:
            open("5q.txt","x")
            
        except Exception as e:
            pass


        try:
            open("6q.txt","x")
            
        except Exception as e:
            pass


        try:
            open("7q.txt","x")
            
        except Exception as e:
            pass


        try:
            open("8q.txt","x")
            
        except Exception as e:
            pass


        try:
            open("9q.txt","x")
            
        except Exception as e:
            pass

        try:
            open("10q.txt","x")
            
        except Exception as e:
            pass


    def show_data(self):
        btn_yes = MDIconButton(icon="check", on_release=self.save_pass)
        btn_no = MDIconButton(icon="close", on_press=self.close_dialog)
        btn_agn = MDIconButton(icon="replay", on_press=self.close_dialog, on_release=self.show_data2)
        username = self.ids.username
        alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!@#$%^&*/?\|+_-='
        pass_len = int(username.text)
        global password
        password = "".join(random.sample(alphabet, pass_len))
        self.dialog = MDDialog(title='Do you want to keep this Password?',
                               text=password, size_hint=(0.8, 1),
                               buttons=[btn_yes, btn_no, btn_agn])
        self.dialog.open()

    def show_data2(self, obj):
        btn_yes = MDIconButton(icon="check", on_release=self.save_pass)
        btn_no = MDIconButton(icon="close", on_press=self.close_dialog)
        btn_agn = MDIconButton(icon="replay", on_press=self.close_dialog, on_release=self.show_data2)
        username = self.ids.username
        alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!@#$%^&*/?\|+_-='
        pass_len = int(username.text)
        global password
        password = "".join(random.sample(alphabet, pass_len))
        self.dialog = MDDialog(title='Do you want to keep this Password?',
                               text=password, size_hint=(0.8, 1),
                               buttons=[btn_yes, btn_no, btn_agn])
        self.dialog.open()

    def navigation_draw(self):
        pass

    def close_dialog(self, obj):
        self.dialog.dismiss()

    def close_dialog2(self, obj):
        self.dialog2.dismiss()

    def save_pass(self, obj):
        acc_name = self.ids.acc_name
        alphabet1 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmonpqrstuvwxyz1234567890!@#$%^&*/?\|+_-= .,:;"
        message = (password)
        encrypt = ''


        q = open("1q.txt","r")
        no1 = q.readline()
    
        w = open("2q.txt","r")
        no2 = w.readline()
    
        e = open("3q.txt","r")
        no3 = e.readline()
    
        r = open("4q.txt","r")
        no4 = r.readline()
    
        t = open("5q.txt","r")
        no5 = t.readline()
    
        y = open("6q.txt","r")
        no6 = y.readline()  

        u = open("7q.txt","r")
        no7 = u.readline()
    
        i = open("8q.txt","r")
        no8 = i.readline()
    
        o = open("9q.txt","r")
        no9 = o.readline()
    
        p = open("10q.txt","r")
        no10 = p.readline()


        if no1 =="":
            for i in message:
                position = alphabet1.find(i)
                newposition = (position + 5) % 83
                encrypt += alphabet1[newposition]
            f = open("1q.txt", "a")
            v = (f"1 {acc_name.text} : {encrypt}\n")
            f.write(v)
            f.close()
            self.dialog.dismiss()

        elif no2 =="":
            for i in message:
                position = alphabet1.find(i)
                newposition = (position + 5) % 83
                encrypt += alphabet1[newposition]
            f = open("2q.txt", "a")
            v = (f"2 {acc_name.text} : {encrypt}\n")
            f.write(v)
            f.close()
            self.dialog.dismiss()
        
        elif no3 =="":
            for i in message:
                position = alphabet1.find(i)
                newposition = (position + 5) % 83
                encrypt += alphabet1[newposition]
            f = open("3q.txt", "a")
            v = (f"3 {acc_name.text} : {encrypt}\n")
            f.write(v)
            f.close()
            self.dialog.dismiss()

        elif no4 =="":
            for i in message:
                position = alphabet1.find(i)
                newposition = (position + 5) % 83
                encrypt += alphabet1[newposition]
            f = open("4q.txt", "a")
            v = (f"4 {acc_name.text} : {encrypt}\n")
            f.write(v)
            f.close()
            self.dialog.dismiss()

        elif no5 =="":
            for i in message:
                position = alphabet1.find(i)
                newposition = (position + 5) % 83
                encrypt += alphabet1[newposition]
            f = open("5q.txt", "a")
            v = (f"5 {acc_name.text} : {encrypt}\n")
            f.write(v)
            f.close()
            self.dialog.dismiss()

        elif no6 =="":
            for i in message:
                position = alphabet1.find(i)
                newposition = (position + 5) % 83
                encrypt += alphabet1[newposition]
            f = open("6q.txt", "a")
            v = (f"6 {acc_name.text} : {encrypt}\n")
            f.write(v)
            f.close()
            self.dialog.dismiss()


        elif no7 =="":
            for i in message:
                position = alphabet1.find(i)
                newposition = (position + 5) % 83
                encrypt += alphabet1[newposition]
            f = open("7q.txt", "a")
            v = (f"7 {acc_name.text} : {encrypt}\n")
            f.write(v)
            f.close()
            self.dialog.dismiss()
        
        elif no8 =="":
            for i in message:
                position = alphabet1.find(i)
                newposition = (position + 5) % 83
                encrypt += alphabet1[newposition]
            f = open("8q.txt", "a")
            v = (f"8 {acc_name.text} : {encrypt}\n")
            f.write(v)
            f.close()
            self.dialog.dismiss()

        elif no9 =="":
            for i in message:
                position = alphabet1.find(i)
                newposition = (position + 5) % 83
                encrypt += alphabet1[newposition]
            f = open("9q.txt", "a")
            v = (f"9 {acc_name.text} : {encrypt}\n")
            f.write(v)
            f.close()
            self.dialog.dismiss()

        elif no10 =="":
            for i in message:
                position = alphabet1.find(i)
                newposition = (position + 5) % 83
                encrypt += alphabet1[newposition]
            f = open("10q.txt", "a")
            v = (f"10 {acc_name.text} : {encrypt}\n")
            f.write(v)
            f.close()
            self.dialog.dismiss()

        else:
            btn_no1 = MDIconButton(icon="close", on_press=self.close)

            self.dialog_pasw= MDDialog(title='Passwords limit has been reached ',
                                        text= "You can not save more than 10 passwords!!" , size_hint=(0.8, 1),
                                        buttons=[btn_no1])

            self.dialog_pasw.open()
            self.dialog.dismiss()

    def close(self,obj):
        self.dialog_pasw.dismiss()

        
    def decode_data(self):
        btn = MDIconButton(icon="close", on_press=self.close_dialog39)
        self.dialog39 = MDDialog(title= "Saved!!",
                               text = "Your password has been saved", size_hint=(0.8, 1),
                               buttons=[btn])
        
        name = self.ids.account
        passw = self.ids.passw

        q = open("1q.txt","r")
        no1 = q.readline()
    
        w = open("2q.txt","r")
        no2 = w.readline()
    
        e = open("3q.txt","r")
        no3 = e.readline()
    
        r = open("4q.txt","r")
        no4 = r.readline()
    
        t = open("5q.txt","r")
        no5 = t.readline()
    
        y = open("6q.txt","r")
        no6 = y.readline()  

        u = open("7q.txt","r")
        no7 = u.readline()
    
        i = open("8q.txt","r")
        no8 = i.readline()
    
        o = open("9q.txt","r")
        no9 = o.readline()
    
        p = open("10q.txt","r")
        no10 = p.readline()


        if no1 =="":
            q = open("1q.txt","w")
            v = (f"1 {name.text} : {passw.text}\n")
            q.write(v)

        elif no2 =="":
            q = open("2q.txt","w")
            v = (f"2 {name.text} : {passw.text}\n")
            q.write(v)
        
        elif no3 =="":
            q = open("3q.txt","w")
            v = (f"3 {name.text} : {passw.text}\n")
            q.write(v)

        elif no4 =="":
            q = open("4q.txt","w")
            v = (f"4 {name.text} : {passw.text}\n")
            q.write(v)
        elif no5 =="":
            q = open("5q.txt","w")
            v = (f"5 {name.text} : {passw.text}\n")
            q.write(v)

        elif no6 =="":
            q = open("6q.txt","w")
            v = (f"6 {name.text} : {passw.text}\n")
            q.write(v)


        elif no7 =="":
            q = open("7q.txt","w")
            v = (f"7 {name.text} : {passw.text}\n")
            q.write(v)
        
        elif no8 =="":
            q = open("8q.txt","w")
            v = (f"8 {name.text} : {passw.text}\n")
            q.write(v)

        elif no9 =="":
            q = open("9q.txt","w")
            v = (f"9 {name.text} : {passw.text}\n")
            q.write(v)

        elif no10 =="":
            q = open("10q.txt","w")
            v = (f"10 {name.text} : {passw.text}\n")
            q.write(v)

        else:
            pass

        self.dialog39.open()

    
    def show_pass(self):
        self.manager.transition.direction = 'left'
        self.manager.current = 'pass_scr'

    def close_dialog39(self, obj):
        self.dialog39.dismiss()


        
class StackScreen(Screen):
    def login_cred(self):
        password2 = self.ids.login_pass
        pass3 = str(password2.text)
        if pass3 == '2':
            self.manager.current = 'menu'
        else:
            btn_no1 = MDIconButton(icon="close", on_press=self.close_dialog3)
            self.dialog_3 = MDDialog(title='Password Check',
                                    text="Invalid Password", size_hint=(0.8, 1),
                                    buttons=[btn_no1])
            self.dialog_3.open()

    def close_dialog3(self, obj):
        self.dialog_3.dismiss()

class PassScreen(Screen):
    def back_to_menuscr(self):
        self.manager.transition.direction = 'right'
        self.manager.current = 'menu'
    def on_enter(self):
        q = open("1q.txt","r")
        no1 = q.read()
    
        w = open("2q.txt","r")
        no2 = w.read()
    
        e = open("3q.txt","r")
        no3 = e.read()
    
        r = open("4q.txt","r")
        no4 = r.read()
    
        t = open("5q.txt","r")
        no5 = t.read()
    
        y = open("6q.txt","r")
        no6 = y.read()  

        u = open("7q.txt","r")
        no7 = u.read()
    
        i = open("8q.txt","r")
        no8 = i.read()
    
        o = open("9q.txt","r")
        no9 = o.read()
    
        p = open("10q.txt","r")
        no10 = p.read()
        t = (no1)

        btn = MDRectangleFlatIconButton(
                text=(t),
                icon="key-variant",
                on_press = self.pass_1
                
            )
        try:
            self.ids.container.add_widget(btn)

        except Exception as e:
            pass
        
        btn2 = MDRectangleFlatIconButton(
                    text=str(no2),
                    icon="key-variant",
                    on_press = self.pass_2
                )

        self.ids.container.add_widget(btn2)

        btn3 = MDRectangleFlatIconButton(
                    text=str(no3),
                    icon="key-variant",
                    on_press = self.pass_3
                )

        self.ids.container.add_widget(btn3)
                    
        btn4 = MDRectangleFlatIconButton(
                    text=str(no4),
                    icon="key-variant",
                    on_press = self.pass_4
                )

        self.ids.container.add_widget(btn4)



        btn5 = MDRectangleFlatIconButton(
                    text=str(no5),
                    icon="key-variant",
                    on_press = self.pass_5
                )

        self.ids.container.add_widget(btn5)


        btn6 = MDRectangleFlatIconButton(
                    text=str(no6),
                    icon="key-variant",
                    on_press = self.pass_6
                )

        self.ids.container.add_widget(btn6)

        btn7 = MDRectangleFlatIconButton(
                    text=str(no7),
                    icon="key-variant",
                    on_press = self.pass_7
                )

        self.ids.container.add_widget(btn7)


        btn8 = MDRectangleFlatIconButton(
                    text=str(no8),
                    icon="key-variant",
                    on_press = self.pass_8
                )

        self.ids.container.add_widget(btn8)


        btn9 = MDRectangleFlatIconButton(
                    text=str(no9),
                    icon="key-variant",
                    on_press = self.pass_9
                )

        self.ids.container.add_widget(btn9)


        btn10 = MDRectangleFlatIconButton(
                    text=str(no10),
                    icon="key-variant",
                    on_press = self.pass_10
                )

        self.ids.container.add_widget(btn10)




    def on_leave(self):
        self.ids.container.clear_widgets()

    def remove_file(self):
        bt = MDIconButton(icon = "close", on_press = self.close_dialog_pass)
        self.dialog_pass = MDDialog(title = "Passwords",
                                    text = "There are no passwords to delete",size_hint = (0.8,1),
                                    buttons = [bt])
        try:
            os.remove("passwords.txt")
        except Exception as e:
            self.dialog_pass.open()



    def close_dialog_pass(self, obj):
        self.dialog_pass.dismiss()



#--------------------------------------------------------------------
    def pass_1(self,obj):



        try:
            q = open("1q.txt","r")
            no1 = q.read()

        except Exception as e:
            pass

        try:
            btn_no1 = MDIconButton(icon="close", on_press=self.close_d1)
            btn_no2 = MDIconButton(icon="delete",on_press=self.del_pas1)
            self.dialog_pas1 = MDDialog(title='Password ',
                                        text= no1 , size_hint=(0.8, 1),
                                        buttons=[btn_no2,btn_no1])

            self.dialog_pas1.open()

        except Exception as e:
            pass

    def close_d1(self,obj):
        self.dialog_pas1.dismiss()

    def del_pas1(self,obj):
        try:
           

            btn_no100 = MDIconButton(icon="close", on_press = self.close_del3000)
            self.dialog_pas3004 = MDDialog(title='Succesfull ',
                                            text="Your password has been deleted succesfully. Please refresh the screen again" , size_hint=(0.8, 1),
                                            buttons=[btn_no100])
            os.remove("1q.txt")
            self.dialog_pas1.dismiss()
            self.dialog_pas3004.open()
        except Exception as e:
            pass

    def close_del3000(self,obj):
        self.dialog_pas3004.dismiss() 
#--------------------------------------------------------------------
    def pass_2(self,obj):
        try:
            q = open("2q.txt","r")
            no1 = q.read()

        except Exception as e:
            pass

        try:
            btn_no1 = MDIconButton(icon="close", on_press=self.close_d2)
            btn_no2 = MDIconButton(icon="delete",on_press=self.del_pas2)
            self.dialog_pas2 = MDDialog(title='Password ',
                                        text= no1 , size_hint=(0.8, 1),
                                        buttons=[btn_no2,btn_no1])

            self.dialog_pas2.open()

        except Exception as e:
            pass

    def close_d2(self,obj):
        self.dialog_pas2.dismiss()

    def del_pas2(self,obj):
        try:
            btn_no100 = MDIconButton(icon="close", on_press = self.close_del3000)
            self.dialog_pas3004 = MDDialog(title='Succesfull ',
                                        text="Your password has been deleted succesfully. Please refresh the screen again" , size_hint=(0.8, 1),
                                            buttons=[btn_no100])
            os.remove("2q.txt")
            self.dialog_pas2.dismiss()
            self.dialog_pas3004.open()
        except Exception as e:
            pass
#--------------------------------------------------------------------
    def pass_3(self,obj):
        try:
            q = open("3q.txt","r")
            no1 = q.read()

        except Exception as e:
            pass

        try:
            btn_no1 = MDIconButton(icon="close", on_press=self.close_d3)
            btn_no2 = MDIconButton(icon="delete",on_press=self.del_pas3)
            self.dialog_pas3 = MDDialog(title='Password ',
                                        text= no1 , size_hint=(0.8, 1),
                                        buttons=[btn_no2,btn_no1])

            self.dialog_pas3.open()

        except Exception as e:
            pass

    def close_d3(self,obj):
        self.dialog_pas3.dismiss()

    def del_pas3(self,obj):
        try:
            btn_no100 = MDIconButton(icon="close", on_press = self.close_del3000)
            self.dialog_pas3004 = MDDialog(title='Succesfull ',
                                        text="Your password has been deleted succesfully. Please refresh the screen again" , size_hint=(0.8, 1),
                                            buttons=[btn_no100])
            os.remove("3q.txt")
            self.dialog_pas3.dismiss()
            self.dialog_pas3004.open()
        except Exception as e:
            pass
#--------------------------------------------------------------------

    def pass_4(self,obj):
        try:
            q = open("4q.txt","r")
            no1 = q.read()

        except Exception as e:
            pass

        try:
            btn_no1 = MDIconButton(icon="close", on_press=self.close_d4)
            btn_no2 = MDIconButton(icon="delete",on_press=self.del_pas4)
            self.dialog_pas4 = MDDialog(title='Password ',
                                        text= no1 , size_hint=(0.8, 1),
                                        buttons=[btn_no2,btn_no1])

            self.dialog_pas4.open()

        except Exception as e:
            pass

    def close_d4(self,obj):
        self.dialog_pas4.dismiss()

    def del_pas4(self,obj):
        try:
            btn_no100 = MDIconButton(icon="close", on_press = self.close_del3000)
            self.dialog_pas3004 = MDDialog(title='Succesfull ',
                                        text="Your password has been deleted succesfully. Please refresh the screen again" , size_hint=(0.8, 1),
                                            buttons=[btn_no100])

            os.remove("4q.txt")
            self.dialog_pas4.dismiss()
            self.dialog_pas3004.open()
        except Exception as e:
            pass
#--------------------------------------------------------------------


    def pass_5(self,obj):
        try:
            q = open("5q.txt","r")
            no1 = q.read()

        except Exception as e:
            pass

        try:
            btn_no1 = MDIconButton(icon="close", on_press=self.close_d5)
            btn_no2 = MDIconButton(icon="delete",on_press=self.del_pas5)
            self.dialog_pas5 = MDDialog(title='Password ',
                                        text= no1 , size_hint=(0.8, 1),
                                        buttons=[btn_no2,btn_no1])

            self.dialog_pas5.open()

        except Exception as e:
            pass

    def close_d5(self,obj):
        self.dialog_pas5.dismiss()

    def del_pas5(self,obj):
        try:
            btn_no100 = MDIconButton(icon="close", on_press = self.close_del3000)
            self.dialog_pas3004 = MDDialog(title='Succesfull ',
                                        text="Your password has been deleted succesfully. Please refresh the screen again" , size_hint=(0.8, 1),
                                            buttons=[btn_no100])
            os.remove("5q.txt")
            self.dialog_pas5.dismiss()
            self.dialog_pas3004.open()
        except Exception as e:
            pass
#--------------------------------------------------------------------
    def pass_6(self,obj):
        try:
            q = open("6q.txt","r")
            no1 = q.read()

        except Exception as e:
            pass

        try:
            btn_no1 = MDIconButton(icon="close", on_press=self.close_d6)
            btn_no2 = MDIconButton(icon="delete",on_press=self.del_pas6)
            self.dialog_pas6 = MDDialog(title='Password ',
                                        text= no1 , size_hint=(0.8, 1),
                                        buttons=[btn_no2,btn_no1])

            self.dialog_pas6.open()

        except Exception as e:
            pass

    def close_d6(self,obj):
        self.dialog_pas6.dismiss()

    def del_pas6(self,obj):
        try:
            btn_no100 = MDIconButton(icon="close", on_press = self.close_del3000)
            self.dialog_pas3004 = MDDialog(title='Succesfull ',
                                        text="Your password has been deleted succesfully. Please refresh the screen again" , size_hint=(0.8, 1),
                                            buttons=[btn_no100])
            os.remove("6q.txt")
            self.dialog_pas6.dismiss()
            self.dialog_pas3004.open()
        except Exception as e:
            pass
#--------------------------------------------------------------------
    def pass_7(self,obj):
        try:
            q = open("7q.txt","r")
            no1 = q.read()

        except Exception as e:
            pass

        try:
            btn_no1 = MDIconButton(icon="close", on_press=self.close_d7)
            btn_no2 = MDIconButton(icon="delete",on_press=self.del_pas7)
            self.dialog_pas7 = MDDialog(title='Password ',
                                        text= no1 , size_hint=(0.8, 1),
                                        buttons=[btn_no2,btn_no1])

            self.dialog_pas7.open()

        except Exception as e:
            pass

    def close_d7(self,obj):
        self.dialog_pas7.dismiss()

    def del_pas7(self,obj):
        try:
            btn_no100 = MDIconButton(icon="close", on_press = self.close_del3000)
            self.dialog_pas3004 = MDDialog(title='Succesfull ',
                                        text="Your password has been deleted succesfully. Please refresh the screen again" , size_hint=(0.8, 1),
                                            buttons=[btn_no100])
            os.remove("7q.txt")
            self.dialog_pas7.dismiss()
            self.dialog_pas3004.open()
        except Exception as e:
            pass
#--------------------------------------------------------------------
    def pass_8(self,obj):
        try:
            q = open("8q.txt","r")
            no1 = q.read()

        except Exception as e:
            pass

        try:
            btn_no1 = MDIconButton(icon="close", on_press=self.close_d8)
            btn_no2 = MDIconButton(icon="delete",on_press=self.del_pas8)
            self.dialog_pas8 = MDDialog(title='Password ',
                                        text= no1 , size_hint=(0.8, 1),
                                        buttons=[btn_no2,btn_no1])

            self.dialog_pas8.open()

        except Exception as e:
            pass

    def close_d8(self,obj):
        self.dialog_pas8.dismiss()

    def del_pas8(self,obj):
        try:
            btn_no100 = MDIconButton(icon="close", on_press = self.close_del3000)
            self.dialog_pas3004 = MDDialog(title='Succesfull ',
                                        text="Your password has been deleted succesfully. Please refresh the screen again" , size_hint=(0.8, 1),
                                            buttons=[btn_no100])
            os.remove("8q.txt")
            self.dialog_pas8.dismiss()
            self.dialog_pas3004.open()
        except Exception as e:
            pass
#--------------------------------------------------------------------
    def pass_9(self,obj):
        try:
            q = open("9q.txt","r")
            no1 = q.read()

        except Exception as e:
            pass

        try:
            btn_no1 = MDIconButton(icon="close", on_press=self.close_d9)
            btn_no2 = MDIconButton(icon="delete",on_press=self.del_pas9)
            self.dialog_pas9 = MDDialog(title='Password ',
                                        text= no1 , size_hint=(0.8, 1),
                                        buttons=[btn_no2,btn_no1])

            self.dialog_pas9.open()

        except Exception as e:
            pass

    def close_d9(self,obj):
        self.dialog_pas9.dismiss()

    def del_pas9(self,obj):
        try:
            btn_no100 = MDIconButton(icon="close", on_press = self.close_del3000)
            self.dialog_pas3004 = MDDialog(title='Succesfull ',
                                        text="Your password has been deleted succesfully. Please refresh the screen again" , size_hint=(0.8, 1),
                                            buttons=[btn_no100])
            os.remove("9q.txt")
            self.dialog_pas9.dismiss()
            self.dialog_pas3004.open()
        except Exception as e:
            pass
#--------------------------------------------------------------------

    def pass_10(self,obj):
        try:
            q = open("10q.txt","r")
            no1 = q.read()

        except Exception as e:
            pass

        try:
            btn_no1 = MDIconButton(icon="close", on_press=self.close_d10)
            btn_no2 = MDIconButton(icon="delete",on_press=self.del_pas10)
            self.dialog_pas10 = MDDialog(title='Password ',
                                        text= no1 , size_hint=(0.8, 1),
                                        buttons=[btn_no2,btn_no1])

            self.dialog_pas10.open()

        except Exception as e:
            pass

    def close_d10(self,obj):
        self.dialog_pas10.dismiss()

    def del_pas10(self,obj):
        try:
            btn_no100 = MDIconButton(icon="close", on_press = self.close_del3000)
            self.dialog_pas3004 = MDDialog(title='Succesfull ',
                                        text="Your password has been deleted succesfully. Please refresh the screen again" , size_hint=(0.8, 1),
                                            buttons=[btn_no100])
            os.remove("10q.txt")
            self.dialog_pas10.dismiss()
            self.dialog_pas3004.open()
        except Exception as e:
            pass

sm = ScreenManager()
sm.add_widget(MenuScreen(name='menu'))
sm.add_widget(StackScreen(name='stack'))
sm.add_widget(StackScreen(name='pass_scr'))

class Password_manager(MDApp):
    def build(self):
        self.theme_cls.primary_palette = "Teal"
        self.theme_cls.primary_hue = "700"
        self.theme_cls.theme_style = 'Light'
        screen = Builder.load_string(screen_helper)

        return screen
    

if __name__ == '__main__':
    Password_manager().run()
